knitr::opts_chunk$set(echo = FALSE)
library("jpeg")
library("tidyverse")
library("janitor")
mammals <- read_csv("data/mammal_lifehistories_v2.csv") %>% clean_names()
mammals <- read_csv("data/mammal_lifehistories_v2.csv") %>% clean_names()
str(mammals)
mammals %>%
select(genus, species, gestation)
mammals %>%
select(genus, species, gestation) %>%
mutate(gestation_years = gestation/12)
mammals %>%
select(genus, species, gestation) %>%
mutate(gestation_years = gestation/12) %>%
arrange(-gestation_years)
mammals
mammals %>%
mutate(across(everything(), tolower)) #across is for all the variables, everything is for the entries in the variables/columns
mammals %>%
mutate(across(c("order", "family"), tolower))
mammals %>%
mutate(across(-1, ~ tolower(.))) #"apply tolower to all columns except the first". the (.) is for every cell.
mammals %>%
select(genus, species, newborn) %>%
arrange(newborn)
mammals %>%
select(genus, species, newborn) %>%
mutate(newborn_new = ifelse(newborn == -999.00, NA, newborn))%>%
arrange(-newborn)
mammals %>%
select(genus, species, newborn) %>%
mutate(newborn_new = ifelse(newborn == -999.00, NA, newborn))%>% # if newborn is equal to -999 then put NA. if not equal to -999 then keep the value in newborn.
arrange(-newborn)
mammals %>%
select(family, genus, species, max_life)
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new = ifelse(max_life=-999.00, NA, max_life)) %>%
mutate(max_life_new = max_life_new/12) %>%
arrange(desc(max_life_new))
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new = ifelse(max_life=-999.00, NA, max_life)) %>%
mutate(max_life_years = max_life_new/12) %>%
arrange(desc(max_life_years))
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new = ifelse(max_life==-999.00, NA, max_life)) %>%
mutate(max_life_years = max_life_new/12) %>%
arrange(desc(max_life_years))
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new = ifelse(max_life==-999.00, NA, max_life)) %>%
mutate(max_life_years = max_life_new/12) %>%
arrange(desc(max_life_new))
mammals %>%
select(family, genus, species, max_life) %>%
mutate(max_life_new = ifelse(max_life==-999.00, NA, max_life)) %>%
mutate(max_life_years = max_life_new/12) %>%
arrange(desc(max_life_new))
msleep <- read.csv("data/msleep") %>% clean_names(msleep)
msleep %>% clean_names(msleep)
library(msleep)
read.csv(msleep)
read.csv("data/msleep")
msleep %>%
mutate(sleep_total24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrang(-sleep_total_24)
msleep %>%
mutate(sleep_total24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(-sleep_total_24)
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(-sleep_total_24)
sleep_total_24
msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(-sleep_total_24)
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(-sleep_total_24)
msleep24
msleep <- msleep
#summary(msleep24)
View(msleep)
library("tidyverse")
library("janitor")
msleep <- msleep
large <- msleep %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total))
msleep %>%
filter(bodywt<10)%>%
summarize(mean_sleep_sm=mean(sleep_total))
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total),
min_sleep_lg=min(sleep_total),
max_sleep_lg=max(sleep_total),
sd_sleep_lg=sd(sleep_total),
total=n())
msleep %>%
select(where(is.numeric)) %>%
summarize(across(everything(), mean, na.rm=TRUE))
library("tidyverse")
library("janitor")
msleep <- msleep
large <- msleep %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total))
msleep %>%
filter(bodywt<10)%>%
summarize(mean_sleep_sm=mean(sleep_total))
msleep %>%
filter(bodywt>200) %>%
summarize(mean_sleep_lg=mean(sleep_total),
min_sleep_lg=min(sleep_total),
max_sleep_lg=max(sleep_total),
sd_sleep_lg=sd(sleep_total),
total=n())
View(msleep)
msleep %>%
select(order = "Primates", bodywt)
msleep %>%
select(order, bodywt)
msleep %>%
select(order, bodywt) %>%
filter(order = "Primates") %>%
summarize(mean_bodywt = mean(bodywt),
min_bodywt = min(bodywt),
max_bodywt = max(bodywt))
msleep %>%
select(order, bodywt) %>%
filter(order == "Primates") %>%
summarize(mean_bodywt = mean(bodywt),
min_bodywt = min(bodywt),
max_bodywt = max(bodywt))
msleep %>%
select(order, bodywt) %>%
filter(order == "Primates") %>%
summarize(mean_bodywt = mean(bodywt),
min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
total = n())
msleep %>%
filter(bodywt > 100)
msleep %>%
filter(bodywt > 100) %>%
summarize(n_genera=n_distinct(genus))
msleep %>%
select(where(is.numeric)) %>%
summarize(across(everything(), mean, na.rm=TRUE))
msleep %>%
select(order, bodywt) %>%
filter(order == "Primates") %>%
summarize(mean_bodywt = mean(bodywt),
min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
sd_bodywt = sd(bodywt),
total = n())
msleep %>%
select(where(is.numeric)) %>%
summarize_all(mean, na.rm=TRUE)
msleep %>%
summarize(n_genera=n_distinct(genus))
msleep %>%
select(order, sleep_total) %>%
summarize(mean_sleep_total = mean(sleep_total),
min_sleep_total = min(sleep_total),
max_sleep_total = max(sleep_total),
sd_sleep_total = sd(sleep_total),
total = n())
msleep %>%
count(vore)
msleep %>%
count(vore, order)
msleep %>%
tabyl(vore)
msleep %>%
count(vore == "carni", conservation)
msleep %>%
filter(vore == "carni") %>%
count(vore, conservation)
msleep %>%
filter(vore == "herbi") %>%
msleep %>%
filter(vore == "herbi") %>%
count(order)
msleep %>%
select(order, sleep_total) %>%
summarize(mean_sleep_total = mean(sleep_total),
min_sleep_total = min(sleep_total),
max_sleep_total = max(sleep_total),
total = n())
bodywt_sm <- msleep %>%
filter(bodywt > 100)
unique(bodywt_sm%genus) #this will give a list
bodywt_sm <- msleep %>%
filter(bodywt > 100)
unique(bodywt_sm$genus) #this will give a list
bodywt_sm %>%
distinct(genus) %>%
pull(genus)
msleep %>%
filter(vore == "carni") %>%
count(vore, conservation)
msleep %>%
filter(vore == "herbi") %>%
count(order)
setwd("~/Desktop/BIS15W2025_BCorreaGonzalez-main/lab6")
setwd("~/Desktop/BIS15W2025_BCorreaGonzalez-main/lab6")
library("tidyverse")
library("janitor")
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-")) %>% clean_names()
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-")) %>% clean_names()
View(superhero_info)
superhero_info %>%
count(alignment)
superhero_info %>%
tabyl(alignment)
superhero_info %>%
filter(alignment == "bad")
superhero_info %>%
select (name, alignment) %>%
filter(alignment == "bad")
superhero_info %>%
summarize(n_race=n_distinct(race))
msleep %>%
filter(vore == "carni") %>%
count(vore, conservation, sort=T) #sorts descending order by count
msleep %>%
filter(vore == "herbi") %>%
count(order, sort = T)
msleep <- msleep
summary(msleep24)
library("tidyverse")
library("janitor")
mammals <- read_csv("data/mammal_lifehistories_v2.csv") %>% clean_names()
str(mammals)
mammals %>%
select(genus, species, gestation) %>%
mutate(gestation_years = gestation/12) %>%
arrange(-gestation_years)
mammals
mammals %>%
mutate(across(everything(), tolower)) #across is for all the variables, everything is for the entries in the variables/columns
mammals %>%
mutate(across(c("order", "family"), tolower))
mammals %>%
mutate(across(-1, ~ tolower(.))) #"apply tolower to all columns except the first". the (.) is for every cell within that column.
#lambda or anonymous function
mammals %>%
select(genus, species, newborn) %>%
arrange(newborn)
# need a way to deal with the -999
mammals %>%
select(genus, species, newborn) %>%
mutate(newborn_new = ifelse(newborn == -999.00, NA, newborn))%>% # if newborn is equal to -999 then put NA. if not equal to -999 then keep the value in newborn.
arrange(-newborn)
mammals %>%
select(family, genus, species, max_life) %>%
#pull out the variables of interest
mutate(max_life_new = ifelse(max_life==-999.00, NA, max_life)) %>%
# replaces the -999 with NA. dont need to but helps to be as specific as possible
mutate(max_life_years = max_life_new/12) %>%
#converted to years
arrange(desc(max_life_new))
msleep24 <- msleep %>%
mutate(sleep_total_24 = sleep_total/24) %>%
select(name, vore, sleep_total_24, sleep_total) %>%
filter(sleep_total_24 <= 0.3) %>%
arrange(-sleep_total_24)
msleep24
msleep <- msleep
summary(msleep24)
hist(msleep24$sleep_total)
superhero_info <- read_csv("data/heroes_information.csv", na = c("", "-99", "-")) %>% clean_names() %>% mutate(across(everything(), tolower))
superhero_powers <- read_csv("data/super_hero_powers.csv", na = c("", "-99", "-")) %>% clean_names() %>% mutate(across(everything(), tolower))
superhero_info %>%
count(alignment)
superhero_info %>%
tabyl(alignment)
superhero_info %>%
select (name, alignment) %>%
filter(alignment == "bad")
superhero_info %>%
summarize(n_race=n_distinct(race))
good_guys <- filter(superhero_info, alignment == "good")
bad_guys <- filter(superhero_info, alignment == "bad")
good_guys %>%
filter(race == "vampire")
good_guys %>%
select(names, race, height) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
summarize_all(mean, na.rm=TRUE) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
summarize(na.rm=TRUE) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height!=NA)
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height!NA)
good_guys %>%
select(name, race, height) %>%
filter(height!=NA)
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height!="NA")
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height, is.na(good_guys))
good_guys %>%
select(name, race, height) %>%
is.na(height) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height!=NA)
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height!=NA) %>%
is.na(height)
good_guys %>%
select(name, race, height)
good_guys %>%
select(name, race, height) %>%
filter(height!=NA)
good_guys %>%
select(name, race, height) %>%
filter(height!="NA")
good_guys %>%
select(name, race, height) %>%
filter(height!="NA")
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height!="NA") %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height!="NA")
good_guys %>%
select(name, race, height) %>%
filter(height!="NA") %>%
as.numeric(height)
good_guys %>%
select(name, race, height) %>%
filter(height!="NA") %>%
as.numeric(height) %>%
mutate(height_meters = height/100)
good_guys %>%
select(name, race, height) %>%
filter(height!="NA") %>%
as.numeric(height)
good_guys %>%
as.numeric(height) %>%
select(name, race, height) %>%
filter(height!="NA") %>%
mutate(height_meters = height/100)
good_guys %>%
as.numeric(height) %>%
select(name, race, height)
